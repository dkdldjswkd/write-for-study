파일처리론 --

파일은 여러개의 레코드, 레코드는 여러개의 필드로 나누어져 있다.

배열의 단점 - 가변적이지 않다, 메모리가 낭비될 수 있다 (배열의 크기를 자유롭게 조정할수 없어서 생기는 문제)
연속된 메모리를 갖고있기때문에 다음 메모리가 비어있다는 확정이 없어 맘대로 늘릴 수 없다

메모리에서 연속된 공간에 있다고 속도가 눈에띄게 빠른것은 아니다
-> 하지만 하드디스크에선 파일의 분산 여부가 속도에 차이를 미친다
이유 : 메모리는 랜덤 엑세스라서 분산여부와 속도에는 차이가 없다, 하드디스크는 랜덤 엑세스 구조가 아니다.
(조각모음을 하면 연속된 공간에 저장되어 속도가 더 빨라진다.)

하드디스크에는 연속된 공간에 파일을 저장하지 못 한다 (여러 조각으로 나누어서 저장한다.)
조각 된 파일을 엑세스 하는 방법 : 디렉토리?, 연결리스트?
파일을 조각내는 기준 : 레코드, 필드의 크기가 같다고 치자 하나의 조각엔 최소 하나의 레코드가 포함되야 한다
디스크 엑세스를 할수있는 크기에 조각의 크기를 맞추면 효율적으로 엑세스가 가능하다
디스크 블럭(파일을 나눈것), 디스크 블럭끼리 다음 블럭의 주소를 타고 엑세스함 
-> 동일한 크기의 배열을 연결리스트로 만들었다고 이해하면 편함