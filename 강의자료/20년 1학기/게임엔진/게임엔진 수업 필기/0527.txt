4p
2D 게임 프로젝트
 * 씬뷰
   - 제작 중인 게임의 오브젝트가 표시되며 실제로 구성될 위치나 크기 등을 조정할 수 있습니다.
   - 위치, 방향, 카메라의 각도 위치 등 간단하게 설정을 할 수 있습니다.
  * 2D 그래픽
   - 스프라이트 : 일정 사이즈의 그래픽데이터를 화면 상에서 자유자재로 배치하거나 고속으로 움직일 수 있게 해주는 역할
   - 스프라이트 편집기 : 때때로 스프라이트 텍스처에는 단일 그래픽 요소가 포함되어 있지만 여러 관련 그래픽을 단일 이미지로 
     결합하는 것이 더 편리합니다. 예를 들어, 이미지는 바퀴가 신체와 독립적으로 움직이는 자동차와 같이 단일 문자의 구성 요소를 
     포함 할 수 있습니다. Unity는 Sprite Editor 를 제공하여 합성 이미지에서 요소를 쉽게 추출 할 수 있도록합니다.
   - 스프라이트 랜더러 :  Sprite 를 렌더링하고 스프라이트가 2D 및 3D 프로젝트의 씬에 시각적으로 표시되는 방식을 제어합니다.
  * 2D 물리처리
   - 중력, 탄력, 마찰, 저항 등의 물리적인 힘을 오브젝트 적용가능한 엔진이다.
   - rigidbody 2d : 게임 오브젝트가 동적 2D 물리의 영향을 받도록 하는 컴포넌트이다.(사용 예 : 플레이어, 핀볼게임의 공)
   - colider 2d : 물리 상호작용을 위해서 사용하는 컴포넌트(충돌, 통과 등) 형태에 따라(circle,box,polygon,edge)
     (사용 예 : 마이오게임의 벽돌, 계단, 미사일 등)
   - hinge joint 2d : 하나의 연결점로 두개의 게임 오브젝트를 연결 (사용 예 : 가위)
5p 
 * 투영 
   - 투영은 3D장면에서 2D표현을 얻는 과정이다.
 * 원근 투영
   - 원근 투영은 원근법을 살려서 가까운 물체는 크게, 먼 물체는 작게 보이도록 하는 것이다.
 * 직교투영 
   - 원근감 없이 수직 위에서 내려다 보듯이 투영하는 방법이며, 게임에서 예를 들면 미니맵이 있다.
   - 오브젝트를 평면으로 보이게 한다. 3D나 4D를 2D로 전환을 하는 것이다.

6p
 * Projection(Projection 항목에는 두 가지가 있습니다.)
   - Perspective : 보통 3D에서 쓰입니다. 현실 세계속 카메라와 비슷한 카메라라고 생각하시면 됩니다. 
     원근감이 적용돼 카메라와의 거리가 멀수록 오브젝트의 크기가 작게 보입니다.
   - Orthographic : 보통 2D에서 쓰입니다. Perspective와는 다르게 원근감이 없는 카메라 입니다. 
     원근감이 적용되지 않아 카메라와의 거리가 멀든 가깝든 오브젝트는 항상 똑같은 크기로 보여집니다. 
 * Size 항목은 Projection 항목이 Orthographic으로 셋팅 되어야만 활성화 되는 항목입니다. 
   - Size는 카메라 확대에 관한 것이라고 보면 되겠습니다. 
 * 게임 뷰와 배경 이미지의 크기가 다르면?
   - 
7P
 * 2d 게임 프로젝트(ppt 설명) 
 * 스프라이트 이미지
   - 프로그램 개발을 할때에 마젠타 배경(투명으로 인식, 마스킹)에 아이콘 여러개를 넣은 이미지를 쓰는것과 비슷합니다.
 * 셀 애니메이션 
   - 셀 위에 그린 여러 장의 그림을 카메라로 촬영하여 움직임을 만드는 애니메이션의 한 형태이다.
   - 작화가가 셀 위에 그린 연속적인 그림을 한 프레임씩 끊어서 촬영한 후 정상 속도로 재생함으로써 연속적인 움직임을 
     창조하는 방식이다.
 * 스프라이트
  - 2D 그래픽 오브젝트입니다. 만약 3D 작업을 주로 해왔다면 Sprites 는 스탠다드 텍스처라고 생각하면 됩니다. 그러나 개발 중에 
    스프라이트 텍스처를 효율적이고 편리하게 합치고 관리하는 특별한 기법이 있습니다.
 * 비트맵
  - 작은 사각형 모양의 픽셀들이 모여 이미지(그림, 사진 등)를 구성하는 방식
    (1240 X 960로 구성된 것은 총 1,190,400개의 점이 이미지에 들어가있는 걸 알 수 있습니다.)
  - 장점 : 많은 픽셀로 정교하고 섬세한 색상 표현이 가능하므로 사진 작업에 유용하게 사용
  - 단점 : 이미지를 축소하고 확대할 때 픽셀 수의 변화로 인해 이미지의 품질이 떨어질 수 있다.
 * 마스크 이미지
  - 마스크란? 기호의 열 또는 비트 패턴을 대상으로 해서 별도의 기호 열이나 비트 패턴과의 논리 연산에 의해서 그 일부를 추출 삭제하는것
    (즉 특정 이미지로 대상 이미지의 표시 영역을 정해 잘린 이미지를 만드는 것)
 * 애니메이션 
  - 애니메이션을 구현할 때 게임 오브젝트를 이동하거나 게임 오브젝트는 고정하고 주변 텍스쳐 이미지를 이동하는 방법을 사용할 수 있다.
8p
 * 텍스트 임포트 설정
  - 프로젝트의 Assets 폴더에서 Unity 에디터로 이미지를 임포트하는 방법을 정의합니다. 
  - 텍스처 임포터에 액세스하려면 프로젝트 창에서 이미지 파일을 선택해야 합니다. 
  - 텍스터 임포터가 인스펙터 창에서 열립니다.
9p, 10p, 11p, 12p, 13p, 14p, 17p, 20p, 21p, 23p, 24p, 25p, 27p, 28p, 29p 나머지는 그림들을 봐야할거같음
 * ppt
13p
 * pixel to units
  - 스프라이트 이미지의 Weight / Width 의 픽셀 수를 의미한다.
  - 이미지를 스프라이트로 표시할 때 어느 정도 크기로 표시할지 정하는 값으로 Unit이란 단위를 쓴다.  이 값은 커질수록 픽셀의 밀도가 커져 화면에는 작게 표시된다.
15p 
 * 스프라이드 모드
  - Single의 경우는 이미지가 하나로 이루어진 스프라이트를 말한다. 배경이나 분리된 스프라이트를 쓸 때 사용한다. 
    ( Pivot : Single Mode 에서만 설정 가능한 항목으로, Pivot 의 정렬을 지정할 수 있다.)
16p
 * 스프라이드 모드
  - Multiple의 경우는 하나에 이미지 안에 이미지가 여러개가 들어있는 스프라이트(아틀라스 이미지라고 한다)를 말한다.

18p
 * Sprite Editor는 스프라이트 이미지가 Multiple 일 경우에만 사용할 수 있다.)
  - Spirte Editor 는 Multiple 이미지 처럼 하나의 이미지에 여러가지 이미지들이 들어가 있을 경우 이를 적절하게 잘라주는 기능을 수행한다.
     Type : Automatic (자동으로 이미지의 크기를 가늠하여, 이미지를 크기에 맞게 잘라준다.)
              Grid (Pixel 사이즈 만큼 이미지를 잘라준다.)
     Minimum Size : 자를 최소 크기 값을 넣어준다. 자를 이미지가 이 값보다 작을 경우 잘라주지 않는다.
     Pivot : Pivot 위치를 정해준다.
19p
 * polygon
  -  퓨터 그래픽에서 면(점, 선, 면 할때의 그 면)의 조합으로 물체를 표현할 때의 각 요소를 이렇게 부른다.
  - 화면에 렌더링되는 요소는 대부분 삼각형이다.
  - 폴리곤의 수가 늘어나면 당연히 세밀한 표현이 가능하고, 실시간으로 표현계산을 행하는 컴퓨터의 요구 능력이 높아진다.
20p 
 * custom outline 
  - Unity가 스프라이트 텍스처를 렌더링하는 메시의 셰이프를 편집하려면 스프라이트 에디터의 Custom Outline 옵션을 사용합니다. 
    커스텀 아웃라인 에디터에서는 컨트롤 포인트를 사용하여 스프라이트 메시 아웃라인의 셰이프를 생성하고 정의할 수 있습니다.
23p 
 * 마하 밴드 현상 
  - 점차적으로 대비가 감소하는 띠가 서로 인접해있을 때, 띠의 경계에서 색이 더 진해보이거나 더 밝게 보인다.
25p 
 * 스프라이트 정령
  -  타입과 용도에 기반한 우선 순위에 따라 렌더러를 정렬합니다. 렌더러 대기열을 통해 렌더러의 렌더 순서를 지정할 수 있습니다. 
     일반적으로 두 가지 메인 대기열, 즉 불투명 대기열과 투명 대기열이 있습니다. 2D 렌더러는 주로 투명 대기열 안에 있으며 
     스프라이트 렌더러, 타일맵 렌더러 및 스프라이트 셰이프 렌더러 타입을 포함합니다.
    ( 정렬 순서 정렬 레이어 및 레이어 순서
      1)렌더 대기열 지정
      2)카메라까지의 거리
      3)원근/Orthographic
      4)커스텀 축 정렬 모드
      5)스프라이트 정렬 포인트
      6)정렬 그룹
      7)머티리얼/셰이더
      8)타이브레이커는 여러 렌더러의 정렬 우선 순위가 동일할 때 발생합니다.
