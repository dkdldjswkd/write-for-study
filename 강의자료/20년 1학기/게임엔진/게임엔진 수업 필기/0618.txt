e-class에 보고서 원본 제출하고 출력본은 C-107호에 제출

12~2시에 C-107호에 가면~ 과제를 제출할 수 있어요 !

지난시간에는 우리가 어제 이제 2D 게임의 배경을 만들기 위해서 스프라이트 shape 이라는 것들을 다뤘어요

스프라이트 shape을 쓰면 우리가 다니는 길이라던지 뒷 배경들을 잘 표현을 할 수 있죠

오늘은 2D 게임 프로젝트의 배경을 만들기 위해서 전통적인 타일 맵이라고하는 방식에 대해 얘기를 해보려고 해요

(p10)여기있는 것들은 다 2D게임의 배경들인데, 이러한 형태의 게임도있고 이런 배경들도 있겠죠

물론 여기서 이렇게 앞에 움직이는 캐릭터나 이런부분들은 sprite나 애니메이션이 필요하면 sprite 애니메이션 형태들로 표현을 하는거고,

주로 배경이라고 하는것들은 움직이지않는 게임의 밑바탕이 되는 맵의 이미지 같은것들을 맵이라고 부르죠

이런 맵들을 사용하는 방법은 그냥 그래픽하는 사람한테 배경 전체를 만들어서 이미지로 달라고 해도 되겠지만,

타일이라고 하는 이런 반복되는 이미지들을 사용해서 유니티엔진에서 내가 원하는 어떤 배경들을 그때그때 그림을 그리는 형태들로

배치를 할 수 있는데, 이렇게 할 수 있는 기능들을 타일맵이라고 불러요. 일반적으로 타일맵에 사용하는 이미지 형태에 따라서 

사각형,육각형, 등각투영 이있음

등각투영 : 실제로 평면적인 그런 이미지 형태가 아니라, 게임의 내용을 봤을때 높이라는 것을 느낄 수 있도록 타일의 이미지들을

그려서 배경들을 표현하는 그런 타일들을 Isometric Tilemap(등각투영 타일맵) 인데 

(p11) 유니티에서는 이러한 타일맵들을 다 제공을 해요. 그리고 이 타일맵을 만들기 위해서는 패키지 매니저에서

타일맵 에디터라고 하는것들이 유니티 에니티에 설치가 되어있어야 해요 ! 

(유니티 -> 윈도우 -> 패키지매니저 -> 2D Tilemap Editor 라는 패키지를 임포트할 수 있어요 ! 여러분의 컴퓨터에도 설치가 되어있지 않으면 다운로드 받아서 임포트를 하면 설치가 되는데)

그런 타일맵 에디터를 설치를 하면 타일맵이라고 하는 것들을 만들고 그 타일맵들을 통해서 표현한 타일들을 그리기 위한 컴포넌트로

타일맵 렌더러라고 하는것, 그리고 타일맵에서 캐릭터가 움직여 다닐 때 타일맵을 뚫고 지나가지 않도록 타일맵 전체에다가 타일을

충돌처리 (Tilemap Collider)를 넣어서 바닥의 형태들로 뚫고 지나가지 않도록 처리를 해줄 수 있어요.

그래서 기본적으로 타일맵이라고 하는 이름이 붙어있는 컴포넌트들 3개를 게임오브젝트가 가지게 되고, 

(p12)추가적으로 타일맵을 표현하기 위해서는 이런 게임오브젝트 (p12빨간글씨 오브젝트 가르킴) 타일맵이라고하는 오브젝트 자체도

필요하지만, 그 타일이란걸 그리기 위해서 저런 타일형태의 소스가 필요해요

타일이라고 하는 스프라이트 에셋들 혹은 텍스쳐들을 사용해서 타일 에셋들을 임포트하고, 에셋을 만들고 타일을 사용해서 실제로

타일맵이라고 하는 그림을 그리기 위해서 타일 팔레트라고 하는 것을 에셋으로 역시 만들어야해요

그래서 그 타일 에셋들을 가지고 있는 타일 팔레트에 있는 파일을 선택해서 여러분의 타일맵 오브젝트의 배경들을 쉽게 그릴 수 있어요

그리고, 유니티 엔진에서는 이런 타일 맵이라고하는 게임오브젝트를 생성하기 위해서 게임오브젝트 메뉴에 보면

(p12빨간글씨 맨뒤 Tilemap ~ Isometric Z As Y Tilemap) 이렇게 5가지 종류를 선택해서 생성할 수 있어요

Hexagonal이라고 하는 것은 육각형 형태의 타일 이미지들을 써가지고 타일맵을 표현 하는것이고

그 육각형들에대해서 꼭짓점이 위쪽방향 -> Point Top (맨위 왼쪽사진) / 면이 위쪽방향 -> Flat Top (맨위 가운데 사진)

Isometric이라고 하는 것은 등각투영이라고 해서 (맨위 오른쪽 사진). 보통 이렇게 사각형이 기울어진 형태들의 모양으로 되어있는

타일들을 써가지고 depth 라고 하는 깊이값 또는 Z축의 어떠한 의미들을 가지도록 타일맵을 만드는 것들이

Isometric 타일맵이에요

그리고 이런 타일맵 오브젝트들을 생성하면, 자동적으로 그리드라고 하는 컴포넌트가 타일맵 게임오브젝트에 자동으로 생성이되고

타일맵이라고 하는 컴포넌트는 이 그리드라고 하는 오브젝트의 Child 오브젝트의 형태들로 만들어져요

이 그리드라고 하는 오브젝트는 또는 그리드 컴포넌트는 타일맵이 어떤 형태가 되어있던 그 타일맵의 기본적인 레이아웃하고

타일맵의 포지션을 월드 좌표계들로 변환을 해서 그리거나 충돌검사를 하거나 하기위한 형태들로 제공하는 컴포넌트에요

그리고 하나의 그리드 오브젝트의 child로 타일맵이라고 하는 오브젝트들을 여러개를 만들어서 굉장히 큰 타일맵들을 표현하는것도 가능

(p13)
Cell Swizzle => 기존 좌표(3,4,5)를 ZYX로 축을 바꿔(재배열하여) 배치하겠다 -> (5,4,3) 으로 유니티엔진에게 넘겨줌
(모든 디폴트 값은 XYZ . 그리드에서 생각하는 XYZ와 월드좌표계의 XYZ를 일치시켜줌, 근데 바꾸고싶으면 XYZ,XZY,.. 6가지 중 바꾸면됨)

(p14)
어떤 스크립트를 만들 때 쓸 수도 있지만, 단순작업시 이런 클래스 멤버들이 사실상 필요없음

(p15)
타일맵이 있으면 타일맵을 그리기위한 컴포넌트고 타일맵 렌더러 컴포넌트이고, 이 타일맵 렌더러 컴포넌트에 보면
타일맵도 2D sprite 이미지들을 그려야 되기 때문에 sorting Layer하고 Order in Layer가 기존의 sprite들을 그리는 sprite 렌더러하고
똑같이 있고, 또 mask하고의 interaction을 위해서 mask interaction도 있어요. 그리고 Sort Order라는 것이 이제 타일들이
그려지기 위해서는 sprite 이미지가 그려지기 위해서는 내부적으로 모든 렌더러들을 정렬기준에 따라서 정렬을 해서
그 순서대로 그린다고 스프라이트에서 공부를 했었죠? 그 정렬을 할 때 타일의 어디를 기준으로 정렬할거냐
그거를 정해주는거에 따라서 실제 그려지는 타일의 이미지들이 달라지게 될 수 있다.

(p16)
이 타일맵 렌더러에 대한부분은 뒷부분에 조금 더 나오니 그 때 보도록 하고

일단은 타일맵 게임오브젝트를 만들고 난 다음에 이제 그 타일에다가 그 격자로 표시된 타일에다가 이미지들을
그리는 걸 하기위해서는 제일먼저 타일에셋이라고 하는것을 만들어야돼
두번째는 타일 팔레트를 만들고 세번째는 타일팔레트에다가 타일 에셋들을 배치를 해서 그릴 준비를해야되요
그렇게해서 타일 팔레트가 준비가 되면 그냥 타일 팔레트에 있는 타일들을 끌어다가 여러분의 배경에다가
타일 이미지들을 잘 배치를 하면 타일맵 렌더러가 알아서 그려주게 될거에요.

그래서 제일 처음에 타일 에셋들을 만들어야 되는데, 에셋 메뉴에 보면은 타일이라는 에셋을 생성할 수 있게돼요.

(p16-p17)
ppt 순서대로 시연해줌

(p18)
타일 팔레트를 사용해서 실제 씬의 타일 맵에 그림을 그리기 위해서는 이 타일 팔레트에 있는 도구들을 사용하면 돼요
순서대로 제일 왼쪽 화살표는 선택을하는 것 / 표:위->아래   그림:좌->우 순서
타일맵과 타일 팔레트 구분할 수 있어야함
시연 주구장창 함

(p19)
이제 사각형 타일맵이라고 했던 것은 사각형 이미지 타일을 써서 꼭 신경써야 할 것은 스프라이트 임포터에서 픽셀 for 유니티들을
설정 잘 해줘야 격자의 크기와 타일 에셋의 크기가 같아져서 격자 내의 그 타일들이 잘 그려지게 되죠?
육각형 타일맵을 만들고 싶으면, 빨간글씨대로 만들면 됨
Point - 왼쪽
Flat - 오른쪽
육각형의 모든 각은 120도가 되어야 하고
육각형의 중심점에서 모든 꼭짓점/변 으로 가는 거리가 같아야함
어느 방향으로 가나 거리가 같기때문에 많이 쓰긴 하죠

(p20)
그래서 육각형 타일맵들을 배치하는 것은 육각형 타일이 있다라고하면 크게 문제가되지 않아요
이제 세번째 타일맵의 형태가 아이소메트릭 (등각투영) 타일 맵이고, 이건 그래픽하는사람이 사각형모양으로 그리고 모서리부분을 투명하게 함
시선을 비스듬하게 해서 그림들처럼 여러개의 면들을 보임으로써 입체모형의 그림처럼 보이게 함 ( 2D인데 3D느낌을 나게한다 해서 2.5D라고도 부름)
이미지가 있다면 에셋으로 만드는건 기존의 방법과 똑같다.
Mash Type은 항상 Tight가 되야한다. ( 각 모서리 부분들이 투명화 되야 하기 때문 )

(p21)
타일맵은 아이소메트릭으로 만드는 방법에 대해 설명 ( 빨간글씨 )
뭐가 다르냐?
-> 위에껀 타일맵이나 격자에서 생각하는 X,Y의 의미를 똑같이 생각하겠다
-> 밑에껀 Z라고하는 축의 의미들을 Y로 생각하겠다라는 의미. 그 의미는 실제로 왼쪽이미지 타일 이미지가 있으면, 우리가 생각하는 이 격자라고 하는
놈들은 사실 Y축 (위로) 쌓여있는 것이죠? 실제로 꼭대기에 위치한 격자의 Y값이 중간에 위치한 격자의 Y값보다 커요. 그런데 이것을
꼭대기에 위치한 것이 중간 것보다 더 멀리있다 라는 의미를 부여하게 되는 것이에요. 타일들을 그릴때 Y가 크면 Z가 큰것처럼 그리는 형태임 
정렬을 하기위한 모드와 정렬 축들을 정해줄 수 있어요 ( 0 1 0 의 경우 모든 정렬을 Y축을 기준으로 할거야, 그리는 순서를 Y가 큰것부터 그릴거야 )
일반적으로 아이소메트릭 타일맵을 쓸 때는 Y축 값을 0이아닌 값으로 설정을 한다.

(p.22)
슬-쩍~? 날먹 레잔도누? 넘어가뿌누?

(p23)
뭔가 타일들을 그리는 순서를 바꾸고 싶으면 타일 팔레트에서 Z 값을 바꿔 타일의 높이를 조절할 수 있음
리셋 누르면 0으로 바뀜

(p24)
이제 타일맵이라고 하는것들을 만들어서 적당하게 쭉 배치를 했으면 게임 오브젝트가 저런 타일 배경을 가지게 되고, 타일맵 렌더러가 알아서
그려 주겠죠. 하지만 충돌이 가능하도록 하려면, 타일맵 충돌체라고 하는것을 생성해야 해요
타일맵 컴포넌트를 가지고있는 게임 오브젝트에다가 타일맵 Collider라고 하는 컴포넌트를 추가 하고, 타일맵 컴포넌트를 추가하면
모든 격자들마다 충돌체가 만들어짐. 작은 충돌체들을 합쳐서 더 큰 충돌체로 만드는게 Composite Collider임 (Physics 에 있음)
Used By Composite 체크표시 하면 합칠 수 있는 인근에 있는 조그만 충돌체들을 합쳐 큰 충돌체로 만들어줌